name: Deploy and Update Release Notes

on:
  pull_request:
    branches:
      - master # Pull requests on master branch

jobs:
  deploy:
    name: Deploy Angular Application
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node-version: [12.x]
        os: [ubuntu-latest]

    steps:
      - name: Checkout to current branch
        uses: actions/checkout@v2

      - name: Configure Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: |
          echo 'Running Setup...'
          yarn install

      - name: Building Production Environment
        run: |
          echo 'Building and Compiling...'
          yarn build

      - name: Angular Deploy gh-pages Actions
        uses: AhsanAyaz/angular-deploy-gh-pages-actions@v1.1.0
        with:
          github_access_token: ${{ secrets.GREN_GITHUB_TOKEN }} # see the Configuration section for how you can create secrets
          base_href: https://ucmercedacm.github.io/Chapter-Website/   # make sure this corresponds to https://<your_username>.github.io/<base_href>/
          deploy_branch: gh-pages # The branch the action should deploy to.
          run_lint: true

      - name: Tag Deployment
        run: |
          echo 'Tagging Deployment...'
          git tag -l ${{ github.event.title }}

  release:
    name: Update Release notes and Changelog
    runs-on: ${{ matrix.os }}
    needs: deploy

    strategy:
        matrix:
            node-version: [12.x]
            os: [ubuntu-latest]
    
    steps:
      - name: Checkout to current branch
        uses: actions/checkout@v2

      - name: Configure Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: |
          echo 'Running Setup...'
          yarn install

      - name: Update Release notes
        run: |
          echo 'Update Release Notes...'
          npm run gren:release -- --token=${{ secrets.GREN_GITHUB_TOKEN }}

      - name: Update Release notes
        run: |
          echo 'Update Changelog...'
          npm run gren:release -- --token=${{ secrets.GREN_GITHUB_TOKEN }}
